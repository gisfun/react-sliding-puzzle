{"version":3,"sources":["helpers.js","constants.js","Tile.js","Board.js","App.js","index.js"],"names":["isSolved","tiles","i","l","length","getMatrixPosition","index","row","Math","floor","col","shuffle","shuffledTiles","filter","t","sort","random","product","TILE_COUNT","j","round","isSolvable","getRandomInt","min","max","ceil","Tile","props","tile","width","height","handleTileClick","imgUrl","console","log","visualPos","x","y","getVisualPosition","tileStyle","borderStyle","borderWidth","borderColor","translateX","translateY","backgroundImage","backgroundSize","backgroundPosition","motionStyle","spring","style","transform","opacity","className","onClick","Board","useState","Array","keys","setTiles","isStarted","setIsStarted","shuffleTiles","swapTiles","tileIndex","srcIndex","destIndex","srcRow","srcCol","destRow","destCol","abs","canSwap","indexOf","swappedTiles","src","dest","tilesResult","swap","pieceWidth","pieceHeight","hasWon","map","key","App","setImgUrl","useEffect","urlParams","URLSearchParams","window","location","search","has","get","randX","randY","pickRandomTileUrl","value","onChange","e","target","history","replaceState","url","param","paramVal","newAdditionalURL","tempArray","split","baseURL","additionalURL","temp","updateURLParameter","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fdca556.chunk.js","sourcesContent":["import { TILE_COUNT, GRID_SIZE } from \"./constants\"\n\n// Credits to https://codepen.io/unindented/pen/QNWdRQ\nexport function isSolvable(tiles) {\n  let product = 1;\n  for (let i = 1, l = TILE_COUNT - 1; i <= l; i++) {\n    for (let j = i + 1, m = l + 1; j <= m; j++) {\n      product *= (tiles[i - 1] - tiles[j - 1]) / (i - j);\n    }\n  }\n  return Math.round(product) === 1;\n}\n\nexport function isSolved(tiles) {\n  for (let i = 0, l = tiles.length; i < l; i++) {\n    if (tiles[i] !== i) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Get the linear index from a row/col pair.\nexport function getIndex(row, col) {\n  return parseInt(row, 10) * GRID_SIZE + parseInt(col, 10);\n}\n\n// Get the row/col pair from a linear index.\nexport function getMatrixPosition(index) {\n  return {\n    row: Math.floor(index / GRID_SIZE),\n    col: index % GRID_SIZE,\n  };\n}\n\nexport function getVisualPosition(row, col, width, height) {\n  return {\n    x: col * width,\n    y: row * height,\n  };\n}\n\nexport function shuffle(tiles) {\n  const shuffledTiles = [\n    ...tiles\n      .filter((t) => t !== tiles.length - 1)\n      .sort(() => Math.random() - 0.5),\n    tiles.length - 1,\n  ];\n  return isSolvable(shuffledTiles) && !isSolved(shuffledTiles)\n    ? shuffledTiles\n    : shuffle(shuffledTiles);\n}\n\nexport function canSwap(srcIndex, destIndex) {\n  const { row: srcRow, col: srcCol } = getMatrixPosition(srcIndex);\n  const { row: destRow, col: destCol } = getMatrixPosition(destIndex);\n  return Math.abs(srcRow - destRow) + Math.abs(srcCol - destCol) === 1;\n}\n\nexport function swap(tiles, src, dest) {\n  const tilesResult = [...tiles];\n  [tilesResult[src], tilesResult[dest]] = [tilesResult[dest], tilesResult[src]];\n  return tilesResult;\n}\n\nexport function updateURLParameter(url, param, paramVal) {\n  var newAdditionalURL = \"\";\n  var tempArray = url.split(\"?\");\n  var baseURL = tempArray[0];\n  var additionalURL = tempArray[1];\n  var temp = \"\";\n  if (additionalURL) {\n    tempArray = additionalURL.split(\"&\");\n    for (var i = 0; i < tempArray.length; i++) {\n      if (tempArray[i].split(\"=\")[0] !== param) {\n        newAdditionalURL += temp + tempArray[i];\n        temp = \"&\";\n      }\n    }\n  }\n\n  var rows_txt = temp + \"\" + param + \"=\" + paramVal;\n  return baseURL + \"?\" + newAdditionalURL + rows_txt;\n}\n\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n\n  return Math.floor(Math.random() * (max - min +1)) + min;\n}\n\nexport function pickRandomTileUrl() {\n  // 16/51730/32497 (top right)\n  // 16/51627/32559 (bottom left)\n  var randX = getRandomInt(51627,51730);\n  var randY = getRandomInt(32497,32559);\n  var tileUrl = `https://www.onemap.gov.sg/maps/tiles/Original_HD/16/${randX}/${randY}.png`;\n  return tileUrl;\n}","export const TILE_COUNT = 9; //16;\nexport const GRID_SIZE = 3; //4;\nexport const BOARD_SIZE = 320;","import React from \"react\";\nimport { Motion, spring } from \"react-motion\";\nimport { getMatrixPosition, getVisualPosition } from \"./helpers\";\nimport { TILE_COUNT, GRID_SIZE, BOARD_SIZE } from \"./constants\"\n\nfunction Tile(props) {\n  const { tile, index, width, height, handleTileClick, imgUrl } = props;\n  console.log(\"img in tile\", imgUrl)\n  const { row, col } = getMatrixPosition(index);\n  const visualPos = getVisualPosition(row, col, width, height);\n  const tileStyle = {\n    width: `calc(100% / ${GRID_SIZE})`,\n    height: `calc(100% / ${GRID_SIZE})`,\n    borderStyle: `groove`,\n    borderWidth: `thin`,\n    borderColor: `black`,\n    translateX: visualPos.x,\n    translateY: visualPos.y,\n    backgroundImage: `url(${imgUrl})`,\n    backgroundSize: `${BOARD_SIZE}px`,\n    backgroundPosition: `${(100 / (GRID_SIZE - 1)) * (tile % GRID_SIZE)}% ${(100 / (GRID_SIZE - 1)) * (Math.floor(tile / GRID_SIZE))}%`,\n\n  };\n  const motionStyle = {\n    translateX: spring(visualPos.x),\n    translateY: spring(visualPos.y)\n  }\n\n  return (\n    <Motion style={motionStyle}>\n      {({ translateX, translateY }) => (\n        <li\n          style={{\n            ...tileStyle,\n            transform: `translate3d(${translateX}px, ${translateY}px, 0)`,\n            // Is last tile?\n            opacity: tile === TILE_COUNT - 1 ? 0 : 1,\n          }}\n          className=\"tile\"\n          onClick={() => handleTileClick(index)}\n        >\n          {!imgUrl && `${tile + 1}`}\n        </li>\n      )}\n    </Motion>\n  );\n}\n\nexport default Tile;\n","import React, { useState } from \"react\";\nimport Tile from \"./Tile\";\nimport { TILE_COUNT, GRID_SIZE, BOARD_SIZE } from \"./constants\"\nimport { canSwap, shuffle, swap, isSolved } from \"./helpers\"\n\nfunction Board({ imgUrl }) {\n  const [tiles, setTiles] = useState([...Array(TILE_COUNT).keys()]);\n  const [isStarted, setIsStarted] = useState(false);\n  console.log('is started:', isStarted)\n\n  const shuffleTiles = () => {\n    const shuffledTiles = shuffle(tiles)\n    setTiles(shuffledTiles);\n  }\n\n  const swapTiles = (tileIndex) => {\n    if (canSwap(tileIndex, tiles.indexOf(tiles.length - 1))) {\n      const swappedTiles = swap(tiles, tileIndex, tiles.indexOf(tiles.length - 1))\n      setTiles(swappedTiles)\n    }\n  }\n\n  const handleTileClick = (index) => {\n    swapTiles(index)\n  }\n\n  const handleShuffleClick = () => {\n    shuffleTiles()\n  }\n\n  const handleStartClick = () => {\n    shuffleTiles()\n    setIsStarted(true)\n  }\n\n  const pieceWidth = Math.round(BOARD_SIZE / GRID_SIZE);\n  const pieceHeight = Math.round(BOARD_SIZE / GRID_SIZE);\n  const style = {\n    width: BOARD_SIZE,\n    height: BOARD_SIZE,\n  };\n  const hasWon = isSolved(tiles)\n\n  return (\n    <>\n      <ul style={style} className=\"board\">\n        {tiles.map((tile, index) => (\n          <Tile\n            key={tile}\n            index={index}\n            imgUrl={imgUrl}\n            tile={tile}\n            width={pieceWidth}\n            height={pieceHeight}\n            handleTileClick={handleTileClick}\n          />\n        ))}\n      </ul>\n      {hasWon && isStarted && <div>Puzzle solved 🧠 🎉</div>}\n      {!isStarted ?\n        (<button onClick={() => handleStartClick()}>Start game</button>) :\n        (<button onClick={() => handleShuffleClick()}>Restart game</button>)}\n    </>\n  );\n}\n\nexport default Board;\n","import React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\nimport { updateURLParameter, pickRandomTileUrl } from \"./helpers\"\n\nfunction App() {\n  const [imgUrl, setImgUrl] = useState(\"\")\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search)\n    if (urlParams.has(\"img\")) {\n      setImgUrl(urlParams.get(\"img\"))\n    }\n    else {\n      setImgUrl(pickRandomTileUrl())\n    }\n  }, [])\n\n  const handleImageChange = (e) => {\n    setImgUrl(e.target.value)\n    window.history.replaceState(\"\", \"\", updateURLParameter(window.location.href, \"img\", e.target.value))\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>React sliding puzzle</h1>\n      <Board imgUrl={imgUrl} />\n      <input value={imgUrl} onChange={handleImageChange} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}